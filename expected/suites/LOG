
Found 61 manifest files in /Users/enu/aalto-dsg/instans-sparql-conformance-tests
Converting manifests to a csv file /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/tests-from-manifests.csv

Writing rules to file /Users/enu/aalto-dsg/instans-sparql-conformance-tests/tools/collect-tests-from-manifests.rq

Converting manifest data-r2/algebra/manifest.ttl
Converting manifest data-r2/ask/manifest.ttl
Converting manifest data-r2/basic/manifest.ttl
Converting manifest data-r2/bnode-coreference/manifest.ttl
Converting manifest data-r2/boolean-effective-value/manifest.ttl
Converting manifest data-r2/bound/manifest.ttl
Converting manifest data-r2/cast/manifest.ttl
Converting manifest data-r2/construct/manifest.ttl
Converting manifest data-r2/dataset/manifest.ttl
Converting manifest data-r2/distinct/manifest.ttl
Converting manifest data-r2/expr-builtin/manifest.ttl
Converting manifest data-r2/expr-equals/manifest.ttl
Converting manifest data-r2/expr-ops/manifest.ttl
Converting manifest data-r2/graph/manifest.ttl
Converting manifest data-r2/i18n/manifest.ttl
Converting manifest data-r2/open-world/manifest.ttl
Converting manifest data-r2/optional-filter/manifest.ttl
Converting manifest data-r2/optional/manifest.ttl
Converting manifest data-r2/reduced/manifest.ttl
Converting manifest data-r2/regex/manifest.ttl
Converting manifest data-r2/solution-seq/manifest.ttl
Converting manifest data-r2/sort/manifest.ttl
Converting manifest data-r2/syntax-sparql1/manifest.ttl
Converting manifest data-r2/syntax-sparql2/manifest.ttl
Converting manifest data-r2/syntax-sparql3/manifest.ttl
Converting manifest data-r2/syntax-sparql4/manifest.ttl
Converting manifest data-r2/syntax-sparql5/manifest.ttl
Converting manifest data-r2/triple-match/manifest.ttl
Converting manifest data-r2/type-promotion/manifest.ttl
Converting manifest data-sparql11/add/manifest.ttl
Converting manifest data-sparql11/aggregates/manifest.ttl
Converting manifest data-sparql11/basic-update/manifest.ttl
Converting manifest data-sparql11/bind/manifest.ttl
Converting manifest data-sparql11/bindings/manifest.ttl
Converting manifest data-sparql11/clear/manifest.ttl
Converting manifest data-sparql11/construct/manifest.ttl
Converting manifest data-sparql11/copy/manifest.ttl
Converting manifest data-sparql11/csv-tsv-res/manifest.ttl
Converting manifest data-sparql11/delete-data/manifest.ttl
Converting manifest data-sparql11/delete-insert/manifest.ttl
Converting manifest data-sparql11/delete-where/manifest.ttl
Converting manifest data-sparql11/delete/manifest.ttl
Converting manifest data-sparql11/drop/manifest.ttl
Converting manifest data-sparql11/entailment/manifest.ttl
Converting manifest data-sparql11/exists/manifest.ttl
Converting manifest data-sparql11/functions/manifest.ttl
Converting manifest data-sparql11/grouping/manifest.ttl
Converting manifest data-sparql11/json-res/manifest.ttl
Converting manifest data-sparql11/move/manifest.ttl
Converting manifest data-sparql11/negation/manifest.ttl
Converting manifest data-sparql11/project-expression/manifest.ttl
Converting manifest data-sparql11/property-path/manifest.ttl
Converting manifest data-sparql11/protocol/manifest.ttl
Converting manifest data-sparql11/service-description/manifest.ttl
Converting manifest data-sparql11/service/manifest.ttl
Converting manifest data-sparql11/subquery/manifest.ttl
Converting manifest data-sparql11/syntax-fed/manifest.ttl
Converting manifest data-sparql11/syntax-query/manifest.ttl
Converting manifest data-sparql11/syntax-update-1/manifest.ttl
Converting manifest data-sparql11/syntax-update-2/manifest.ttl
Converting manifest data-sparql11/update-silent/manifest.ttl

Create tests from file /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/tests-from-manifests.csv


In total 1011 tests

Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/join-combo-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/join-combo-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/join-combo-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/join-combo-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/join-combo-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/join-combo-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/join-combo-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/join-combo-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/nested-opt-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/nested-opt-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/nested-opt-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/nested-opt-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/nested-opt-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/nested-opt-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/nested-opt-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/nested-opt-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/opt-filter-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/filter-place-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/filter-nested-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/filter-nested-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/filter-nested-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/filter-nested-1"> executed.
; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/filter-nested-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/filter-nested-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/filter-nested-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/filter-nested-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/filter-scope-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/filter-scope-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

; Warning: "=: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 1"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/filter-scope-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/filter-scope-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/algebra/join-scope-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/algebra/join-scope-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/algebra/join-scope-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/algebra/join-scope-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/ask/ask-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/ask/ask-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/ask/ask-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/ask/ask-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/ask/ask-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/ask/ask-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/ask/ask-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/ask/ask-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/ask/ask-7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/ask/ask-7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/ask/ask-7"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/ask/ask-7"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/ask/ask-8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/ask/ask-8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/ask/ask-8"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/ask/ask-8"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/bgp-no-match"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/bgp-no-match"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/bgp-no-match"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/bgp-no-match"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/prefix-name-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/prefix-name-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/prefix-name-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/prefix-name-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/spoo-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/spoo-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/spoo-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/spoo-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-5"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/base-prefix-5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/list-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/list-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/list-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/list-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/list-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/list-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/list-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/list-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/list-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/list-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/list-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/list-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/list-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/list-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/list-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/list-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/quotes-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/quotes-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/quotes-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/quotes-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/quotes-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/quotes-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/quotes-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/quotes-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/quotes-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/quotes-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/quotes-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/quotes-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/quotes-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/quotes-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/quotes-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/quotes-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-5"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-6"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-6"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-7"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-7">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-7">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-7"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-8"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-8"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/term-9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/term-9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/term-9"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/term-9"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/var-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/var-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/var-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/var-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/basic/var-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/basic/var-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/basic/var-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/basic/var-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/bnode-coreference/dawg-bnode-coref-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/bnode-coreference/dawg-bnode-coref-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/bnode-coreference/dawg-bnode-coref-001"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/bnode-coreference/dawg-bnode-coref-001"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-boolean-literal"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-boolean-literal"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-boolean-literal"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-boolean-literal"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "ebv: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-5"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "not: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-6"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/boolean-effective-value/dawg-bev-6"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/bound/dawg-bound-query-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/bound/dawg-bound-query-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/bound/dawg-bound-query-001"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/bound/dawg-bound-query-001"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/cast/cast-str"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/cast/cast-str"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/cast/cast-str"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/cast/cast-str"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/cast/cast-flt"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/cast/cast-flt"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation xsd:float not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/cast/cast-flt">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/cast/cast-flt"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/cast/cast-dbl"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/cast/cast-dbl"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation xsd:double not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/cast/cast-dbl">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/cast/cast-dbl"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/cast/cast-dec"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/cast/cast-dec"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation xsd:decimal not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/cast/cast-dec">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/cast/cast-dec"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/cast/cast-int"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/cast/cast-int"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "xsd:integer: Cannot apply to argument #<RDF-IRI http://example.org/z>"

; Warning: "junk in string \"string\""

; Warning: "junk in string \"-10.2E3\""

; Warning: "junk in string \"+33.3300\""

; Warning: "junk in string \"2002-10-10T17:00:00Z\""

; Warning: "junk in string \"true\""

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/cast/cast-int"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/cast/cast-int"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/cast/cast-dt"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/cast/cast-dt"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation xsd:dateTime not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/cast/cast-dt">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/cast/cast-dt"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/cast/cast-bool"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/cast/cast-bool"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation xsd:boolean not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/cast/cast-bool">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/cast/cast-bool"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/construct/construct-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/construct/construct-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/construct/construct-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/construct/construct-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/construct/construct-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/construct/construct-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/construct/construct-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/construct/construct-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/construct/construct-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/construct/construct-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/construct/construct-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/construct/construct-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/construct/construct-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/construct/construct-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/construct/construct-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/construct/construct-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/construct/construct-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/construct/construct-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/construct/construct-5"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/construct/construct-5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-01"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-02"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-03"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-04"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-05"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-06"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-07"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-08"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-09"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-09"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-09b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-09b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-09b"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-09b"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-10"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-10b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-10b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-10b"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-10b"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-11"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-12"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-12"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-12b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-12b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-12b"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/dataset/dawg-dataset-12b"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-star-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/distinct-star-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-star-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-star-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/distinct-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/distinct-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/distinct-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/distinct-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-9"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/no-distinct-9"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/distinct/distinct-9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-9"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/distinct/distinct-9"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isliteral-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isliteral-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isliteral-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isliteral-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "str: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "str: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "str: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "str: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-str-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isblank-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isblank-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isblank-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isblank-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "datatype: Cannot apply to argument #<RDF-IRI http://example.org/things#z>"

; Warning: "datatype: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "datatype: Cannot apply to argument #<RDF-IRI http://example/iri>"

; Warning: "datatype: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "datatype: Cannot apply to argument #<RDF-IRI http://example/iri>"

; Warning: "datatype: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-datatype-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "lang: Cannot apply to argument #<RDF-IRI http://example/iri>"

; Warning: "lang: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "lang: Cannot apply to argument #<RDF-IRI http://example/iri>"

; Warning: "lang: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-lang-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isuri-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isuri-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isuri-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isuri-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isiri-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isiri-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isiri-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-isiri-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-1">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-2">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-3">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-4">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-basic"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-basic"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-basic">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/dawg-langmatches-basic"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/lang-case-insensitive-eq"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/lang-case-insensitive-eq"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/lang-case-insensitive-eq"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/lang-case-insensitive-eq"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/lang-case-insensitive-ne"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/lang-case-insensitive-ne"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/lang-case-insensitive-ne"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/lang-case-insensitive-ne"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-simple"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-simple"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-simple"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-simple"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-eq"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-eq"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-eq"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-eq"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-not-eq"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-not-eq"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"zzz\""

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"1\""

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 \"\""

; Warning: "=: Cannot apply to arguments 1 \"\""

; Warning: "=: Cannot apply to arguments 1 \"\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"\""

; Warning: "=: Cannot apply to arguments \"\" 1"

; Warning: "=: Cannot apply to arguments \"\" 1"

; Warning: "=: Cannot apply to arguments \"\" 1"

; Warning: "=: Cannot apply to arguments \"\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"\" #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"1\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"\""

; Warning: "=: Cannot apply to arguments 1 #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments \"\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> 1"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> 1"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> 1"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"1\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"\""

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-not-eq"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-builtin/sameterm-not-eq"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"1\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"1\""

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"zzz\""

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-IRI http://example.org/things#z>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-5"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"zzz\""

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"1\""

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"1\""

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> 1.0d0"

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"zzz\""

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments 1.0d0 \"1\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType> \"1\""

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" 1.0d0"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-LITERAL \"zzz\"^^http://example.org/things#myType>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> 1.0d0"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"zzz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example.org/things#z> \"1\""

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-2-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments 1.0d0 #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"zzz\" #<RDF-IRI http://example.org/things#z>"

; Warning: "=: Cannot apply to arguments \"1\" #<RDF-IRI http://example.org/things#z>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-5"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-equals/eq-graph-5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-ops/unplus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-ops/unplus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-ops/unplus-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-ops/unplus-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-ops/unminus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-ops/unminus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-ops/unminus-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-ops/unminus-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-ops/plus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-ops/plus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-ops/plus-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-ops/plus-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-ops/minus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-ops/minus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-ops/minus-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-ops/minus-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-ops/mul-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-ops/mul-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-ops/mul-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-ops/mul-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-ops/ge-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-ops/ge-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-ops/ge-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-ops/ge-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/expr-ops/le-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/expr-ops/le-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/expr-ops/le-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/expr-ops/le-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-02"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-03"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-04"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-06"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-07"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-08"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-09"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-09"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-10"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-10b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-10b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-10b"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-10b"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-11"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/graph/dawg-graph-11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/i18n/kanji-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/i18n/kanji-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/i18n/kanji-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/i18n/kanji-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/i18n/kanji-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/i18n/kanji-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/i18n/kanji-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/i18n/kanji-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/i18n/normalization-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/i18n/normalization-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/i18n/normalization-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/i18n/normalization-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"a\"^^http://example/t#type1> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"b\"^^http://example/t#type1> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"a\"^^http://example/t#type2> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"b\"^^http://example/t#type2> 1"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"a\"^^http://example/t#type1> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"b\"^^http://example/t#type1> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"a\"^^http://example/t#type2> 1"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"b\"^^http://example/t#type2> 1"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"b\"^^http://example/t#type1> and #<RDF-LITERAL \"a\"^^http://example/t#type1> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"a\"^^http://example/t#type2> and #<RDF-LITERAL \"a\"^^http://example/t#type1> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"b\"^^http://example/t#type2> and #<RDF-LITERAL \"a\"^^http://example/t#type1> are not the same term"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"a\"^^http://example/t#type1>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"a\"^^http://example/t#type1>"

; Warning: "=: Cannot apply to arguments 2 #<RDF-LITERAL \"a\"^^http://example/t#type1>"

; Warning: "=: Cannot apply to arguments 2 #<RDF-LITERAL \"a\"^^http://example/t#type1>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"b\"^^http://example/t#type1> and #<RDF-LITERAL \"a\"^^http://example/t#type1> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"a\"^^http://example/t#type2> and #<RDF-LITERAL \"a\"^^http://example/t#type1> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"b\"^^http://example/t#type2> and #<RDF-LITERAL \"a\"^^http://example/t#type1> are not the same term"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"a\"^^http://example/t#type1>"

; Warning: "=: Cannot apply to arguments 1 #<RDF-LITERAL \"a\"^^http://example/t#type1>"

; Warning: "=: Cannot apply to arguments 2 #<RDF-LITERAL \"a\"^^http://example/t#type1>"

; Warning: "=: Cannot apply to arguments 2 #<RDF-LITERAL \"a\"^^http://example/t#type1>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-06"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments NIL \"xyz\""

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL \"xyz\""

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\""

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-07"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments NIL \"xyz\""

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL \"xyz\""

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\""

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-08"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments NIL \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\""

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments NIL \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\""

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-IRI http://example/abc>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-09"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-09"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments NIL \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\""

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments NIL \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\""

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-IRI http://example/abc>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-10"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\"\">"

; Warning: "=: Cannot apply to arguments NIL \"abc\""

; Warning: "=: Cannot apply to arguments NIL \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL \"abc\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\"\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"abc\"\">"

; Warning: "=: Cannot apply to arguments NIL \"abc\""

; Warning: "=: Cannot apply to arguments NIL \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL \"abc\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"abc\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"abc\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"abc\"\">"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" NIL\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL\">"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" NIL\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL\">"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL\">"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"abc\"^^http://example/unknown>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"^^http://example/unknown>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-LITERAL \"abc\"^^http://example/unknown>\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"abc\"^^http://example/unknown> are not the same term\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:1>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:1>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:1>\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/abc>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-IRI http://example/abc>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-IRI http://example/abc>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-IRI http://example/abc>\">"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-11"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" NIL\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> NIL\">"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "=: Cannot apply to arguments \"xyz\" NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" NIL\">"

; Warning: "=: Cannot apply to arguments NIL \"xyz\""

; Warning: "=: Cannot apply to arguments NIL \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL \"xyz\"\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>\">"

; Warning: "=: Cannot apply to arguments NIL \"xyz\""

; Warning: "=: Cannot apply to arguments NIL \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL \"xyz\"\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"xyz\"^^http://example/unknown> are not the same term\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-LITERAL \"xyz\"^^http://example/unknown>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"^^http://example/unknown>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-LITERAL \"xyz\"^^http://example/unknown>\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\"\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term\">"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"rdf-term-equal: Literals #<RDF-LITERAL \"xyz\"^^http://example/unknown> and #<RDF-LITERAL \"xyz\"@\"EN\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> are not the same term\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-LITERAL \"xyz\"^^http://example/unknown> NIL\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-ANONYMOUS-BLANK-NODE _:0>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-ANONYMOUS-BLANK-NODE _:0>\">"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> NIL\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>\">"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments \"xyz\" #<RDF-IRI http://example/xyz>\">"

; Warning: "=: Cannot apply to arguments NIL #<RDF-IRI http://example/xyz>"

; Warning: "=: Cannot apply to arguments NIL #<RDF-IRI http://example/xyz>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments NIL #<RDF-IRI http://example/xyz>\">"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\""

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-IRI http://example/xyz> \"xyz\"\">"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL"

; Warning: "=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"=: Cannot apply to arguments #<RDF-IRI http://example/xyz> NIL\">"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-12"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-eq-12"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/date-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/date-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"2006-08-23Z\"^^http://www.w3.org/2001/XMLSchema#date> and #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"2006-08-23+00:00\"^^http://www.w3.org/2001/XMLSchema#date> and #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"2001-01-01\"^^http://www.w3.org/2001/XMLSchema#date> and #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"2001-01-01Z\"^^http://www.w3.org/2001/XMLSchema#date> and #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> are not the same term"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/date-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/date-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/date-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/date-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"2006-08-23Z\"^^http://www.w3.org/2001/XMLSchema#date> and #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"2006-08-23+00:00\"^^http://www.w3.org/2001/XMLSchema#date> and #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"2001-01-01\"^^http://www.w3.org/2001/XMLSchema#date> and #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> are not the same term"

; Warning: "rdf-term-equal: Literals #<RDF-LITERAL \"2001-01-01Z\"^^http://www.w3.org/2001/XMLSchema#date> and #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> are not the same term"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/date-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/date-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/date-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/date-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: ">: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: ">: Cannot apply to arguments #<RDF-LITERAL \"2006-08-23\"^^http://www.w3.org/2001/XMLSchema#date> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: ">: Cannot apply to arguments #<RDF-LITERAL \"2006-08-23Z\"^^http://www.w3.org/2001/XMLSchema#date> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: ">: Cannot apply to arguments #<RDF-LITERAL \"2006-08-23+00:00\"^^http://www.w3.org/2001/XMLSchema#date> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: ">: Cannot apply to arguments #<RDF-LITERAL \"2001-01-01\"^^http://www.w3.org/2001/XMLSchema#date> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: ">: Cannot apply to arguments #<RDF-LITERAL \"2001-01-01Z\"^^http://www.w3.org/2001/XMLSchema#date> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/date-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/date-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/date-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/date-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/date-4"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/date-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-cmp-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-cmp-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "<: Cannot apply to arguments 1 \"v2\""

; Warning: ">: Cannot apply to arguments 1 \"v2\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"<: Cannot apply to arguments 1 \"v2\"\">"

; Warning: "<: Cannot apply to arguments #<RDF-LITERAL \"x\"^^http://example/unknown> #<RDF-LITERAL \"x\"^^http://example/unknown>"

; Warning: ">: Cannot apply to arguments #<RDF-LITERAL \"x\"^^http://example/unknown> #<RDF-LITERAL \"x\"^^http://example/unknown>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"<: Cannot apply to arguments #<RDF-LITERAL \"x\"^^http://example/unknown> #<RDF-LITERAL \"x\"^^http://example/unknown>\">"

; Warning: "<: Cannot apply to arguments #<RDF-IRI test:abc> #<RDF-IRI test:abc>"

; Warning: ">: Cannot apply to arguments #<RDF-IRI test:abc> #<RDF-IRI test:abc>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"<: Cannot apply to arguments #<RDF-IRI test:abc> #<RDF-IRI test:abc>\">"

; Warning: "<: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: ">: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"<: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>\">"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-cmp-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-cmp-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/open-world/open-cmp-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/open-world/open-cmp-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "<: Cannot apply to arguments 1 \"v2\""

; Warning: "=: Cannot apply to arguments 1 \"v2\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"<: Cannot apply to arguments 1 \"v2\"\">"

; Warning: ">: Cannot apply to arguments 1 \"v2\""

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"ebv: Cannot apply to argument #<SPARQL-ERROR \"<: Cannot apply to arguments 1 \"v2\"\">\">"

; Warning: "<: Cannot apply to arguments #<RDF-LITERAL \"x\"^^http://example/unknown> #<RDF-LITERAL \"x\"^^http://example/unknown>"

; Warning: "<: Cannot apply to arguments #<RDF-IRI test:abc> #<RDF-IRI test:abc>"

; Warning: "<: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: "=: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"<: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>\">"

; Warning: ">: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"ebv: Cannot apply to argument #<SPARQL-ERROR \"<: Cannot apply to arguments #<INSTANS::DATETIME \"2006-08-23T09:00:00+01:00\"> #<RDF-LITERAL \"2006-08-22\"^^http://www.w3.org/2001/XMLSchema#date>\">\">"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/open-world/open-cmp-02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/open-world/open-cmp-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-001"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-001"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-002"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-002"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "<: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 15"

; Warning: "<: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 15"

; Warning: "<: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 15"

; Warning: "<: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 15"

; Warning: "<: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 15"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-002"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-002"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-003"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-003"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-003"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-003"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-004"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-004"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-004"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-004"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-005-simplified"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-005-simplified"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-005-simplified"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-005-simplified"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-005-not-simplified"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-005-not-simplified"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-005-not-simplified"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional-filter/dawg-optional-filter-005-not-simplified"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-complex-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-001"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-001"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-002"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-002"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-002"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional/dawg-optional-002"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/optional/dawg-union-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/optional/dawg-union-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/optional/dawg-union-001"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/optional/dawg-union-001"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/reduced/reduced-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/reduced/reduced-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/reduced/reduced-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/reduced/reduced-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/reduced/reduced-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/reduced/reduced-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/reduced/reduced-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/reduced/reduced-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation regex not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-001">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-001"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-002"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-002"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation regex not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-002">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-002"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-003"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-003"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation regex not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-003">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-003"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-004"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-004"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation regex not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-004">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/regex/dawg-regex-004"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/limit-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/offset-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-5"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/solution-seq/slice-5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-1.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-2.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-3.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-4.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-5.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-5"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-6.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-6"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-6"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-7.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-7"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-7"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-8.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-8"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-8"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-9.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-9"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-9"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-r2/sort/result-sort-10.rdf
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-10"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-numbers"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-numbers"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-numbers"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-numbers"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-builtin"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-builtin"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-builtin"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-builtin"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-function"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-function"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-function"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/sort/dawg-sort-function"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-basic-06"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-06"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-07"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-qname-08"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-06"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-07"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-08"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-08">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-08">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-08"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-09"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-10"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-11"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-12"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-13"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-14"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-15"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-15"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-15"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-15"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-16"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-16"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-16"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-16"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-17"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-17"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-17"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-17"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-18"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-18"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-18"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-18"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-19"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-19"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-19"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-19"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-20"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-20"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-20"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lit-20"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-06"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-07"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-08"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-09"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-10"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-11"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-12"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-13"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-struct-14"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-lists-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-bnodes-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-forms-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-forms-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-forms-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-forms-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-forms-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-forms-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-forms-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-forms-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-union-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-union-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-union-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-union-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-union-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-union-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-union-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-union-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-expr-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-06"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-order-07"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-limit-offset-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql1/syntax-pat-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-06"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-07"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-08"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-09"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-10"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-11"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-12"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-13"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-general-14"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-keywords-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-lists-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-bnode-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-03"> executed.
; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"#<TYPE-ERROR expected-type: LIST datum: #<RDF-IRI http://example.org/name>>\">"

; Warning: "ebv: Cannot apply to argument #<SPARQL-ERROR \"ebv: Cannot apply to argument #<SPARQL-ERROR \"#<TYPE-ERROR expected-type: LIST datum: #<RDF-IRI http://example.org/name>>\">\">"

Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-function-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-select-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-select-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-select-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-select-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-select-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-select-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-select-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-select-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-ask-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-ask-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-ask-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-ask-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-construct06"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-describe01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-describe01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-describe01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-describe01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-describe02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-describe02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-describe02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-form-describe02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-dataset-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-graph-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-04"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql2/syntax-esc-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-02"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-03"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-04"> executed.
; Warning: ">: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> 5"

Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-05"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-06"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-07"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/syn-08"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-01"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-01"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-01"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-01"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-02"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-02"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-02"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-02"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-03"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-03"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-03"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-03"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-04"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-04"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-04"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-04"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-05"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-05"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-05"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-05"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-06"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-06"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-06"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-06"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-07"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-07"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-07"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-07"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-08"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-08"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-08"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-08"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-09"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-09"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-09"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-09"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-10"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-10"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-10"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-10"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-11"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-11"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-11"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-11"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-12"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-12"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-12"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-12"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-13"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-13"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-13"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-13"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-14"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-14"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-14"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-14"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-15"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-15"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-15"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-15"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-16"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-16"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-16"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-16"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-17"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-17"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-17"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-17"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-18"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-18"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-18"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-18"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-19"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-19"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-19"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-19"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-20"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-20"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-20"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-20"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-21"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-21"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-21"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-21"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-22"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-22"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-22"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-22"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-23"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-23"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-23"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-23"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-24"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-24"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-24"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-24"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-25"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-25"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-25"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-25"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-26"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-26"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-26"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-26"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-27"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-27"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-27"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-27"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-28"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-28"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-28"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-28"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-29"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-29"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-29"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-29"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-30"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-30"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-30"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-30"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-31"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-31"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-31"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/syn-bad-31"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnode-dot"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnode-dot"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnode-dot"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnode-dot"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnodes-missing-pvalues-01"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnodes-missing-pvalues-01"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnodes-missing-pvalues-01"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnodes-missing-pvalues-01"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnodes-missing-pvalues-02"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnodes-missing-pvalues-02"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnodes-missing-pvalues-02"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/bnodes-missing-pvalues-02"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/empty-optional-01"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/empty-optional-01"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/empty-optional-01"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/empty-optional-01"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/empty-optional-02"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/empty-optional-02"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/empty-optional-02"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/empty-optional-02"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/filter-missing-parens"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/filter-missing-parens"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/filter-missing-parens"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/filter-missing-parens"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/lone-list"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/lone-list"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/lone-list"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/lone-list"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/lone-node"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/lone-node"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/lone-node"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/lone-node"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/blabel-cross-filter"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/blabel-cross-filter"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/blabel-cross-filter"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql3/blabel-cross-filter"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-graph-bad"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-graph-bad">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-graph-bad">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-graph-bad"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-optional-bad"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-optional-bad">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-optional-bad">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-optional-bad"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-union-bad"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-union-bad">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-union-bad">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql3/blabel-cross-union-bad"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-09"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-10"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-11"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-leading-digits-in-prefixed-names"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-leading-digits-in-prefixed-names"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-leading-digits-in-prefixed-names"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql4/syn-leading-digits-in-prefixed-names"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-34"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-34">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-34">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-34"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-35"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-35">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-35">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-35"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-36"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-36">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-36">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-36"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-37"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-37">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-37">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-37"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-38"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-38">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-38">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-38"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-opt-breaks-bgp"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-opt-breaks-bgp">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-opt-breaks-bgp">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-opt-breaks-bgp"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-union-breaks-bgp"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-union-breaks-bgp">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-union-breaks-bgp">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-union-breaks-bgp"> executed.
Phase PARSED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-graph-breaks-bgp"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-graph-breaks-bgp">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-graph-breaks-bgp">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test "data-r2/syntax-sparql4/syn-bad-graph-breaks-bgp"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql5/syntax-reduced-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql5/syntax-reduced-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql5/syntax-reduced-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql5/syntax-reduced-01"> executed.
Phase PARSED for #<sparql-positive-syntax-test "data-r2/syntax-sparql5/syntax-reduced-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test "data-r2/syntax-sparql5/syntax-reduced-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test "data-r2/syntax-sparql5/syntax-reduced-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test "data-r2/syntax-sparql5/syntax-reduced-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-001"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-001"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-001"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-002"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-002"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-002"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-002"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-003"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-003"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-003"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-003"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-004"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-004"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-004"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/triple-match/dawg-triple-pattern-004"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments 1 #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-07"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"-1\"^^http://www.w3.org/2001/XMLSchema#nonPositiveInteger> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-08"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"-1\"^^http://www.w3.org/2001/XMLSchema#negativeInteger> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-09"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-09"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#long> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-10"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#int> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-11"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-12"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-12"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#byte> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-13"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-13"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#nonNegativeInteger> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-14"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-14"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-15"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-15"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#unsignedLong> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-15"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-15"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-16"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-16"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#unsignedInt> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-16"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-16"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-17"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-17"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#unsignedShort> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-17"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-17"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-18"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-18"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#unsignedByte> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-18"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-18"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-19"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-19"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#positiveInteger> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-19"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-19"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-20"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-20"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short> 1.0d0"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-20"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-20"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-21"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-21"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short> 1.0"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-21"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-21"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-22"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-22"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short> 1.0"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-22"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-22"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-23"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-23"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-23"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-23"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-24"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-24"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#byte> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-24"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-24"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-25"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-25"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#long>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-25"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-25"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-26"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-26"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#int>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-26"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-26"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-27"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-27"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#short> #<RDF-LITERAL \"1\"^^http://www.w3.org/2001/XMLSchema#byte>"

Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-27"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-27"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-28"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-28"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-28"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-28"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-29"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-29"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-29"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-29"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-30"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-30"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-30"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-r2/type-promotion/type-promotion-30"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/add/add01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/add/add01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/add/add01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/add/add01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/add/add02"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/add/add02">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/add/add02">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/add/add02"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/add/add03"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/add/add03">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/add/add03">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/add/add03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/add/add04"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/add/add04">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/add/add04">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/add/add04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/add/add05"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/add/add05">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/add/add05">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/add/add05"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/add/add06"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/add/add06">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/add/add06">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/add/add06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/add/add07"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/add/add07">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/add/add07">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/add/add07"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/add/add08"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/add/add08">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/add/add08">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/add/add08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg04"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg05"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg06"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg07"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg07"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg08"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg08"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg08"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg08b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg08b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg08b"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg08b"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg09"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg09"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg09"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg09"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg10"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg10"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg10"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg10"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg11"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg11"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg11"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg11"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg12"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg12"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg12"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/aggregates/agg12"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
1
1
22
1
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
1
1
22
1
aaa
aaa
bb
aaa
bb
aaa
c
bb
aaa
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
1
1
22
1
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-groupconcat-03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-avg-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-avg-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-avg-01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-avg-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-avg-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-avg-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-avg-02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-avg-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-min-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-min-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-min-01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-min-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-min-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-min-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-min-02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-min-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-max-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-max-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-max-01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-max-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-max-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-max-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-max-02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-max-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sum-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sum-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sum-01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sum-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sum-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sum-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sum-02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sum-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sample-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sample-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sample-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-sample-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-err-01"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-err-01">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-err-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-err-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-err-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-err-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation xsd:double not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-err-02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-err-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-empty-group"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-empty-group"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-empty-group"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/aggregates/agg-empty-group"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo1"> executed -> rule-comparing-succeeded rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo1"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named1"> executed -> rule-comparing-succeeded rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named1"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named2"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named3"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-spo-named3"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-02"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-using-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-using-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-using-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-using-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-05"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-05a"> executed -> rule-initialization-succeeded rule-translation-failed feature-not-implemented-yet rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-05a"> executed -> rule-initialization-succeeded rule-translation-failed feature-not-implemented-yet rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-05a">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-05a"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-same-bnode"> executed -> rule-initialization-succeeded rule-translation-failed feature-not-implemented-yet rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-same-bnode"> executed -> rule-initialization-succeeded rule-translation-failed feature-not-implemented-yet rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-same-bnode">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-data-same-bnode"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-same-bnode"> executed -> rule-initialization-succeeded rule-translation-failed feature-not-implemented-yet rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-same-bnode"> executed -> rule-initialization-succeeded rule-translation-failed feature-not-implemented-yet rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-same-bnode">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-same-bnode"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-same-bnode2"> executed -> rule-initialization-succeeded rule-translation-failed feature-not-implemented-yet rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-same-bnode2"> executed -> rule-initialization-succeeded rule-translation-failed feature-not-implemented-yet rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-same-bnode2">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/basic-update/insert-where-same-bnode2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind07"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind08"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "=: Cannot apply to arguments 1 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "=: Cannot apply to arguments 2 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "=: Cannot apply to arguments 3 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "=: Cannot apply to arguments 4 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind10"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bind/bind11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bind/bind11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bind/bind11"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bind/bind11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/values1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/values1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/values1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/values1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/values2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/values2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/values2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/values2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/values3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/values3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/values3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/values3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/values4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/values4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/values4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/values4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/values5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/values5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/values5"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/values5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/values6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/values6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/values6"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/values6"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/values7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/values7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/values7"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/values7"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/values8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/values8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/values8"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/values8"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/inline1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/inline1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/inline1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/inline1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/bindings/inline2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/bindings/inline2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/bindings/inline2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/bindings/inline2"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-default-01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-default-01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-default-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-default-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-graph-01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-graph-01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-graph-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-graph-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-named-01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-named-01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-named-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-named-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-all-01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-all-01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-all-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/clear/dawg-clear-all-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere04"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/construct/constructwhere04"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/construct/constructwhere05"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/construct/constructwhere05"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/construct/constructwhere05"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/construct/constructwhere05"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/construct/constructwhere06"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/construct/constructwhere06"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/construct/constructwhere06"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/construct/constructwhere06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/copy/copy01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/copy/copy01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/copy/copy01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/copy/copy01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/copy/copy02"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/copy/copy02">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/copy/copy02">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/copy/copy02"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/copy/copy03"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/copy/copy03">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/copy/copy03">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/copy/copy03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/copy/copy04"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/copy/copy04">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/copy/copy04">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/copy/copy04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/copy/copy06"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/copy/copy06">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/copy/copy06">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/copy/copy06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/copy/copy07"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/copy/copy07">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/copy/copy07">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/copy/copy07"> executed.
Phase PARSED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv01">: Already failed, skipping.
Phase RAN for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv01">: Already failed, skipping.
Phase COMPARED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv01">: Already failed, skipping.
Phase COMPLETED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv01"> executed.
Phase PARSED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv02">: Already failed, skipping.
Phase RAN for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv02">: Already failed, skipping.
Phase COMPARED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv02">: Already failed, skipping.
Phase COMPLETED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv02"> executed.
Phase PARSED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv03">: Already failed, skipping.
Phase RAN for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv03">: Already failed, skipping.
Phase COMPARED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv03">: Already failed, skipping.
Phase COMPLETED for #<sparql-csv-result-format-test "data-sparql11/csv-tsv-res/csv03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/csv-tsv-res/csvtsv01.tsv
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/csv-tsv-res/csvtsv02.tsv
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/csv-tsv-res/csvtsv03.tsv
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/csv-tsv-res/tsv03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-02"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-05"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-data/dawg-delete-data-06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01">: In skip list, skipping
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01">: In skip list, skipping
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01b">: In skip list, skipping
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01b">: In skip list, skipping
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01b"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01c"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01c">: In skip list, skipping
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01c">: In skip list, skipping
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-01c"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-02">: In skip list, skipping
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-02">: In skip list, skipping
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-02"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-03"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-03">: In skip list, skipping
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-03">: In skip list, skipping
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-03"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-03b"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-03b">: In skip list, skipping
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-03b">: In skip list, skipping
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-03b"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-04">: In skip list, skipping
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-04">: In skip list, skipping
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-04b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-04b">: In skip list, skipping
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-04b">: In skip list, skipping
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-04b"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-05"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-05">: In skip list, skipping
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-05">: In skip list, skipping
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-05"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-05b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-05b">: In skip list, skipping
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-05b">: In skip list, skipping
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-05b"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-06"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-06">: In skip list, skipping
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-06">: In skip list, skipping
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-06b"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-06b">: In skip list, skipping
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-06b">: In skip list, skipping
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-insert/dawg-delete-insert-06b"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-07"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-07">: In skip list, skipping
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-07">: In skip list, skipping
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-07"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-07b"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-07b">: In skip list, skipping
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-07b">: In skip list, skipping
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-07b"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-08"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-08">: In skip list, skipping
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-08">: In skip list, skipping
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-08"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-09"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-09">: In skip list, skipping
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-09">: In skip list, skipping
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/delete-insert/dawg-delete-insert-09"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-02"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-05"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete-where/dawg-delete-where-06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-02"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-05"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-07"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-07"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-02"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-05"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-with-06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-02a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-02a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-02a"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-02a"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-05"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-06a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-06a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-06a"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/delete/dawg-delete-using-06a"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-default-01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-default-01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-default-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-default-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-graph-01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-graph-01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-graph-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-graph-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-named-01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-named-01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-named-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-named-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-all-01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-all-01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-all-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/drop/dawg-drop-all-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdf04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs04"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs05"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs06"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs07"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs08"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs09"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs09"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs10"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs11"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs12"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs12"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs13"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/rdfs13"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/d-ent-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/d-ent-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/d-ent-01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/d-ent-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/owlds01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/owlds01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/owlds01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/owlds01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/owlds02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/owlds02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/owlds02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/owlds02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/plainlit"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/plainlit"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/plainlit"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/plainlit"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q1-rdfs"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q1-rdfs"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q1-rdfs"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q1-rdfs"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q5"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/paper-sparqldl-q5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/bind01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/bind02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/bind03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind03"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/bind04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/bind05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/bind06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/bind07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind07"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/bind08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind08"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/bind08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-07"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-08"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-09"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-09"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-10"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-11"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-12"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-12"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-13"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/sparqldl-13"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/lang"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/lang"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/lang"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/lang"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent2"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent5"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent6"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent6"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent7"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent7"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent8"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent8"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent9"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent9"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/parent10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent10"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/parent10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/simple1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/simple2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/simple3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple3"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/simple4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple4"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple4"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/simple5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple5"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/simple6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple6"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple6"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/simple7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple7"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple7"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/entailment/simple8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple8"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/entailment/simple8"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/exists/exists01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/exists/exists01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/exists/exists01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/exists/exists01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/exists/exists02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/exists/exists02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/exists/exists02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/exists/exists02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/exists/exists03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/exists/exists03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/exists/exists03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/exists/exists03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/exists/exists04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/exists/exists04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/exists/exists04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/exists/exists04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/exists/exists05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/exists/exists05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/exists/exists05"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/exists/exists05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strdt01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt01">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strdt02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strdt03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "strdt: Cannot apply to arguments -2 #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments -1 #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments -1.6 #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments 1.1 #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments 2.5 #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments #<RDF-LITERAL \"bar\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments #<INSTANS::DATETIME \"2010-06-21T11:28:01Z\"> #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments #<INSTANS::DATETIME \"2010-12-21T15:38:02-08:00\"> #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments #<INSTANS::DATETIME \"2008-06-20T23:59:00Z\"> #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

; Warning: "strdt: Cannot apply to arguments #<INSTANS::DATETIME \"2011-02-01T01:02:03\"> #<RDF-IRI http://www.w3.org/2001/XMLSchema#string>"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strdt03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strlang01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang01">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strlang02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation langMatches not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strlang03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "strlang: Cannot apply to arguments -2 \"en-US\""

; Warning: "strlang: Cannot apply to arguments -1 \"en-US\""

; Warning: "strlang: Cannot apply to arguments -1.6 \"en-US\""

; Warning: "strlang: Cannot apply to arguments 1.1 \"en-US\""

; Warning: "strlang: Cannot apply to arguments 2.5 \"en-US\""

; Warning: "strlang: Cannot apply to arguments #<RDF-LITERAL \"bar\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> \"en-US\""

; Warning: "strlang: Cannot apply to arguments #<INSTANS::DATETIME \"2010-06-21T11:28:01Z\"> \"en-US\""

; Warning: "strlang: Cannot apply to arguments #<INSTANS::DATETIME \"2010-12-21T15:38:02-08:00\"> \"en-US\""

; Warning: "strlang: Cannot apply to arguments #<INSTANS::DATETIME \"2008-06-20T23:59:00Z\"> \"en-US\""

; Warning: "strlang: Cannot apply to arguments #<INSTANS::DATETIME \"2011-02-01T01:02:03\"> \"en-US\""

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strlang03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/isnumeric01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/isnumeric01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/isnumeric01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/isnumeric01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/abs01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/abs01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/abs01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/abs01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/ceil01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/ceil01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/ceil01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/ceil01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/floor01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/floor01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/floor01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/floor01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/round01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/round01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/round01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/round01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/concat01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/concat01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/concat01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/concat01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/concat02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/concat02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

; Warning: "CONCAT: Illegal parameter 7"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/concat02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/concat02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/substring01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/substring01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/substring01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/substring01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/substring02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/substring02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/substring02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/substring02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/length01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/length01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/length01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/length01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/ucase01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/ucase01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/ucase01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/ucase01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/lcase01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/lcase01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/lcase01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/lcase01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/encode01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/encode01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/encode01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/encode01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/contains01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/contains01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/contains01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/contains01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/starts01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/starts01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/starts01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/starts01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/ends01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/ends01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "strends: Cannot apply to arguments -2 \"bc\""

; Warning: "strends: Cannot apply to arguments -1 \"bc\""

; Warning: "strends: Cannot apply to arguments -1.6 \"bc\""

; Warning: "strends: Cannot apply to arguments 1.1 \"bc\""

; Warning: "strends: Cannot apply to arguments 2.5 \"bc\""

; Warning: "strends: Cannot apply to arguments #<INSTANS::DATETIME \"2010-06-21T11:28:01Z\"> \"bc\""

; Warning: "strends: Cannot apply to arguments #<INSTANS::DATETIME \"2010-12-21T15:38:02-08:00\"> \"bc\""

; Warning: "strends: Cannot apply to arguments #<INSTANS::DATETIME \"2008-06-20T23:59:00Z\"> \"bc\""

; Warning: "strends: Cannot apply to arguments #<INSTANS::DATETIME \"2011-02-01T01:02:03\"> \"bc\""

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/ends01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/ends01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/plus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/plus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments \"a\" 1"

; Warning: "+: Cannot apply to arguments #<RDF-ANONYMOUS-BLANK-NODE _:0> \"1\""

; Warning: "+: Cannot apply to arguments #<RDF-IRI http://example/a> \"1\""

; Warning: "+: Cannot apply to arguments \"1\" \"2\""

; Warning: "+: Cannot apply to arguments \"1\" \"2\""

; Warning: "+: Cannot apply to arguments \"1\" 2"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/plus-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/plus-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/plus-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/plus-2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments \"a\" \"1\""

; Warning: "str: Cannot apply to argument #<RDF-ANONYMOUS-BLANK-NODE _:0>"

; Warning: "+: Cannot apply to arguments \"http://example/a\" \"1\""

; Warning: "+: Cannot apply to arguments \"1\" \"2\""

; Warning: "+: Cannot apply to arguments \"1.0\" \"2\""

; Warning: "+: Cannot apply to arguments \"1\" \"2\""

; Warning: "+: Cannot apply to arguments \"1\" \"2\""

; Warning: "+: Cannot apply to arguments \"1\" \"2\""

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/plus-2"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/plus-2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/md5-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/md5-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation md5 not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/md5-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/md5-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/md5-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/md5-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation md5 not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/md5-02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/md5-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/sha1-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/sha1-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation sha1 not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/sha1-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/sha1-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/sha1-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/sha1-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation sha1 not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/sha1-02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/sha1-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/sha256-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/sha256-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation sha256 not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/sha256-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/sha256-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/sha256-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/sha256-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation sha256 not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/sha256-02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/sha256-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/sha512-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/sha512-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation sha512 not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/sha512-01">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/sha512-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/sha512-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/sha512-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation sha512 not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/sha512-02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/sha512-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/hours"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/hours"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/hours"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/hours"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/minutes"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/minutes"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/minutes"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/minutes"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/seconds"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/seconds"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/seconds"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/seconds"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/year"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/year"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/year"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/year"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/month"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/month"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/month"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/month"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/day"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/day"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/day"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/day"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/timezone"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/timezone"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/timezone"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/timezone"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/tz"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/tz"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/tz"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/tz"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/bnode01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/bnode01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed

Error in parse-rdf-file /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/functions/output//bnode01.ttl: 9:64:Lexer error: Unrecognized keyword "FOO"

Parsing of /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/functions/output//bnode01.ttl failed: (9:64:Lexer error: Unrecognized keyword "FOO")
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/bnode01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/bnode01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/in01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/in01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/in01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/in01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/in02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/in02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/in02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/in02"> executed.; in: LAMBDA ()
;     (INSTANS::|%-NOT IN%| 2)
; ==>
;   (LET ((#:X0 2))
;     (AND))
; 
; caught STYLE-WARNING:
;   The variable #:X0 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/notin01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/notin01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/notin01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/notin01"> executed.
; Warning: "Divide-by-zero"

Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/notin02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/notin02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/notin02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/notin02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/now01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/now01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/now01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/now01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/rand01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/rand01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/rand01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/rand01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/bnode02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/bnode02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/bnode02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/bnode02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/iri01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/iri01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/iri01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/iri01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/if01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/if01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/if01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/if01"> executed.
; Warning: "Divide-by-zero"

Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/if02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/if02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/if02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/if02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/coalesce01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/coalesce01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "/: Cannot apply to arguments 1 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "/: Cannot apply to arguments 0 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "/: Cannot apply to arguments 0 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "Divide-by-zero"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "/: Cannot apply to arguments 0 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "/: Cannot apply to arguments 0 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "/: Cannot apply to arguments 4 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

; Warning: "/: Cannot apply to arguments 4 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "None of the arguments of COALESCE evaluated to a legal RDF term"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/coalesce01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/coalesce01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "strbefore: Cannot apply to arguments 7 \"s\""

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore01a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore01a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "strbefore: Cannot apply to arguments 7 \"s\""

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore01a"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore01a"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "STRBEFORE: Incompatible lang tags in #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"b\"@\"cy\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strbefore02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strafter01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "strafter: Cannot apply to arguments 7 \"e\""

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter01a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strafter01a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "strafter: Cannot apply to arguments 7 \"e\""

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter01a"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter01a"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/strafter02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "STRAFTER: Incompatible lang tags in #<RDF-LITERAL \"abc\"@\"en\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> and #<RDF-LITERAL \"b\"@\"cy\"^^http://www.w3.org/1999/02/22-rdf-syntax-ns#langString>"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/strafter02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/replace01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/replace01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation replace not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/replace01">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/replace01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/replace02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/replace02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation replace not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/replace02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/replace02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/replace03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/replace03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
SPARQL operation replace not implemented yet!
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/replace03">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/replace03"> executed.
SPARQL operation regex not implemented yet!
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/uuid01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/uuid01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/uuid01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/uuid01"> executed.
SPARQL operation regex not implemented yet!
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/functions/struuid01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/functions/struuid01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/functions/struuid01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/functions/struuid01"> executed.; in: LAMBDA (#:INSTANS3219 #:GROUP3218)
;     (LET ((#:AGGRS3220 (OR (INSTANS::GROUP-AGGREGATES #:GROUP3218) (SETF #))))
;       )
; 
; caught STYLE-WARNING:
;   The variable #:AGGRS3220 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; in: LAMBDA (#:INSTANS3219 #:GROUP3218)
;     (LET ((#:AGGRS3220 (INSTANS::GROUP-AGGREGATES #:GROUP3218)))
;       )
; 
; caught STYLE-WARNING:
;   The variable #:AGGRS3220 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/grouping/group01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/grouping/group01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/grouping/group01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/grouping/group01"> executed.; in: LAMBDA (#:INSTANS3227 #:GROUP3226)
;     (LET ((#:AGGRS3228 (OR (INSTANS::GROUP-AGGREGATES #:GROUP3226) (SETF #))))
;       )
; 
; caught STYLE-WARNING:
;   The variable #:AGGRS3228 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; in: LAMBDA (#:INSTANS3227 #:GROUP3226)
;     (LET ((#:AGGRS3228 (INSTANS::GROUP-AGGREGATES #:GROUP3226)))
;       )
; 
; caught STYLE-WARNING:
;   The variable #:AGGRS3228 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/grouping/group02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/grouping/group02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/grouping/group02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/grouping/group02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/grouping/group03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/grouping/group03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/grouping/group03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/grouping/group03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/grouping/group04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/grouping/group04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/grouping/group04"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/grouping/group04"> executed.; in: LAMBDA (#:INSTANS3251 #:GROUP3250)
;     (LET ((#:AGGRS3252 (OR (INSTANS::GROUP-AGGREGATES #:GROUP3250) (SETF #))))
;       )
; 
; caught STYLE-WARNING:
;   The variable #:AGGRS3252 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; in: LAMBDA (#:INSTANS3251 #:GROUP3250)
;     (LET ((#:AGGRS3252 (INSTANS::GROUP-AGGREGATES #:GROUP3250)))
;       )
; 
; caught STYLE-WARNING:
;   The variable #:AGGRS3252 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/grouping/group05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/grouping/group05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/grouping/group05"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/grouping/group05"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/grouping/group06"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/grouping/group06"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/grouping/group06"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/grouping/group06"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/grouping/group07"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/grouping/group07"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/grouping/group07"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/grouping/group07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/json-res/jsonres01.srj
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/json-res/jsonres02.srj
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/json-res/jsonres03.srj
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Cannot convert yet /Users/enu/aalto-dsg/instans-sparql-conformance-tests/suites/data-sparql11/json-res/jsonres04.srj
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres04"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/json-res/jsonres04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/move/move01"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/move/move01">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/move/move01">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/move/move01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/move/move02"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/move/move02">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/move/move02">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/move/move02"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/move/move03"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/move/move03">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/move/move03">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/move/move03"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/move/move04"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/move/move04">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/move/move04">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/move/move04"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/move/move06"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/move/move06">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/move/move06">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/move/move06"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/move/move07"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/move/move07">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/move/move07">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/move/move07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-by-exclusion-nex-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/subset-by-exclusion-nex-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-by-exclusion-nex-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-by-exclusion-nex-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-by-exclusion-minus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/subset-by-exclusion-minus-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-by-exclusion-minus-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-by-exclusion-minus-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/temporal-proximity-by-exclusion-nex-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/temporal-proximity-by-exclusion-nex-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/temporal-proximity-by-exclusion-nex-1"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/temporal-proximity-by-exclusion-nex-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/temporal-proximity-by-exclusion-minus-1"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/temporal-proximity-by-exclusion-minus-1">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/temporal-proximity-by-exclusion-minus-1">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/temporal-proximity-by-exclusion-minus-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/subset-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/subset-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/set-equals-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/set-equals-1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/set-equals-1"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/set-equals-1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/subset-03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/subset-03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/exists-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/exists-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/exists-01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/exists-01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/exists-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/exists-02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/exists-02"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/exists-02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/full-minuend"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/full-minuend"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/full-minuend"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/full-minuend"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/negation/partial-minuend"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/negation/partial-minuend"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/negation/partial-minuend"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/negation/partial-minuend"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp01"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "+: Cannot apply to arguments 1 \"foobar\""

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp02"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "*: Cannot apply to arguments 2 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp04"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "datatype: Cannot apply to argument #<RDF-IRI http://www.example.org/schema#a>"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp05"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "datatype: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp06"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
; Warning: "datatype: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "datatype: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

; Warning: "datatype: Cannot apply to argument #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp07"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/project-expression/projexp07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp01"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp02"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp02">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp02">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp03"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp04"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp04">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp04">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp05"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp05">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp05">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp06"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp07"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp08"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp09"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp09"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp10"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp10">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp10">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp11"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp12"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp12">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp12">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp12"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp13"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp13">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp13">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp13"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp14"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp14">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp14">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp14"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp15"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp15">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp15">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp15"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp16"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp16">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp16">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp16"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp20"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp20">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp20">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp20"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp21"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp21">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp21">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp21"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp22"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp22">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp22">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp22"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp23"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp23">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp23">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp23"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp24"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp24">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp24">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp24"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp25"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp25">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp25">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp25"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp26"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp26">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp26">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp26"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp27"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp27">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp27">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp27"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp28a"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp28a">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp28a">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp28a"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp29"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp29">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp29">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp29"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp30"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp30">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp30">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp30"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp31"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp31">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp31">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp31"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp32"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp32">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp32">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp32"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp33"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp33">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp33">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp33"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp34"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp34">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp34">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp34"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp35"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp35">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp35">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp35"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp36"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp36">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp36">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp36"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp37"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/property-path/pp37">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp37">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/property-path/pp37"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/service/service1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/service/service1">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/service/service1">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/service/service1"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/service/service2"> executed -> rule-initialization-failed rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/service/service2">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/service/service2">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/service/service2"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/service/service3"> executed -> rule-initialization-failed rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/service/service3">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/service/service3">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/service/service3"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/service/service4a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/service/service4a">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/service/service4a">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/service/service4a"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/service/service5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/service/service5">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/service/service5">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/service/service5"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/service/service6"> executed -> rule-initialization-failed rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/service/service6">: Already failed, skipping.
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/service/service6">: Already failed, skipping.
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/service/service6"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/service/service7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/service/service7">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/service/service7">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/service/service7"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery01"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery01"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery02"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery02"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery03"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery03"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery04">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery04">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery04"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery05"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery05"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery06"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery06">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery06">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery06"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery07"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery07"> executed -> rule-comparing-failed rule-running-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery07"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery08">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery08">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery08"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery09">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery09">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery09"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery10">: In skip list, skipping
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery10">: In skip list, skipping
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery10"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery11"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery11"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery12"> executed -> rule-comparing-succeeded rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery12"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery13"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery13"> executed.
Phase PARSED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery14"> executed -> rule-comparing-failed rule-running-succeeded rdf-parsing-succeeded rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed ran compared
Phase COMPLETED for #<sparql-query-evaluation-test "data-sparql11/subquery/subquery14"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_1"> executed -> rule-initialization-failed rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_1">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_1">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_1"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_2"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-fed/test_3"> executed.
; Warning: "+: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> #<INSTANS::SPARQL-UNBOUND

                                                                       {1000DA6813}>"

Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_1"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_1"> executed.
; Warning: "+: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> #<INSTANS::SPARQL-UNBOUND

                                                                       {1000DA6813}>"

Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_2"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_2"> executed.
; Warning: "+: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> #<INSTANS::SPARQL-UNBOUND

                                                                       {1000DA6813}>"

Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_3"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_3"> executed.
; Warning: "+: Cannot apply to arguments #<INSTANS::SPARQL-UNBOUND {1000DA6813}> #<INSTANS::SPARQL-UNBOUND

                                                                       {1000DA6813}>"

Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_4"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_4"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_5"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_5"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_6"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_6"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_7"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_7"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_8"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_8"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_9"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_9"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_10"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_10"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_11"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_11"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_12"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_12"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_13"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_13"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_14"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_14"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_15"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_15"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_15"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_15"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_16"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_16"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_16"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_16"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_17"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_17"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_17"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_17"> executed.
#<SPARQL-UNBOUND {1000DA6813}>
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_18"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_18"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_18"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_18"> executed.
DISTINCTP
; Warning: "xsd:string: Cannot apply to argument :DISTINCTP"

Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_19"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_19"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_19"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_19"> executed.
#<SPARQL-UNBOUND {1000DA6813}>
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_20"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_20"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_20"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_20"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_21"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_21"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_21"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_21"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_22"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_22"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_22"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_22"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_23"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_23"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_23"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_23"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_24"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_24"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_24"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_24"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_25"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_25"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_25"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_25"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_26"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_26"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_26"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_26"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_27"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_27"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_27"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_27"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_28"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_28"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_28"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_28"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_29"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_29"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_29"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_29"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_30"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_30"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_30"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_30"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_31"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_31"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_31"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_31"> executed.; in: LAMBDA (INSTANS::?2)
;     (INSTANS::|%-NOT IN%| INSTANS::?2)
; ==>
;   (LET ((#:X0 INSTANS::?2))
;     (AND))
; 
; caught STYLE-WARNING:
;   The variable #:X0 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_32"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_32"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_32"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_32"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_33"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_33"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_33"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_33"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_34"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_34"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_34"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_34"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_35a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_35a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_35a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_35a"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_36a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_36a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_36a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_36a"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_38a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_38a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_38a"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_38a"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_40"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_40"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_40"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_40"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_41"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_41"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_41"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_41"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_42"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_42"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_42"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_42"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_43"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_43"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_43"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_43"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_44"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_44"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_44"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_44"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_45"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_45"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_45"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_45"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_46"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_46"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_46"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_46"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_47"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_47"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_47"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_47"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_48"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_48"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_48"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_48"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_49"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_49"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_49"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_49"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_50"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_50"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_50"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_50"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_51"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_51"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_51"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_51"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_52"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_52">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_52">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_52"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_53"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_53"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_53"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_53"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_54"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_54"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_54"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_54"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_55"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_55"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_55"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_55"> executed.
; Warning: "+: Cannot apply to arguments 1 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_56"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_56"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_56"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_56"> executed.
; Warning: "+: Cannot apply to arguments 1 #<INSTANS::SPARQL-UNBOUND {1000DA6813}>"

Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_57"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_57"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_57"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_57"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_58"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_58"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_58"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_58"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_59"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_59"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_59"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_59"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_60"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_60"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_60"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_60"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_61a"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_61a"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_61a"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_61a"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_62a"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_62a"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_62a"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_62a"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_63"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_63">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_63">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_63"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_64"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_64"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_64"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_64"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_65"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_65">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_65">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_65"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_66"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_66"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_66"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_66"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_01"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_02"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_02"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_03"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_03"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_04"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_04"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_05"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_05"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_06"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_06">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_06">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_06"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_07"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_07">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_07">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_07"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_08"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_08"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_09"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pn_09"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_01"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_01"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_01"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_01"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_02"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_02"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_02"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_02"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_03"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_03"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_03"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_03"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_04"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_04"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_04"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_04"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_05"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_05"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_05"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_05"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_06"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_06"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_06"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_06"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_07"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_07"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_07"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_07"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_08"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_08"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_08"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_08"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_09"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_09"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_09"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_09"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_10"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_10"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_10"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_10"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_11"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_11"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_11"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_11"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_12"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_12"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_12"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_12"> executed.
Phase PARSED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_13"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_13"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_13"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-syntax-test-11 "data-sparql11/syntax-query/test_pn_bad_13"> executed.
Phase PARSED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pp_coll"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pp_coll">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pp_coll">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-syntax-test-11 "data-sparql11/syntax-query/test_pp_coll"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_1"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_1">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_1">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_1"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_2"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_2">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_2">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_2"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_3"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_3">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_3">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_3"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_4"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_4">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_4">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_4"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_5"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_5">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_5">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_5"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_6"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_6">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_6">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_6"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_7"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_7">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_7">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_7"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_8"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_8">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_8">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_8"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_9"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_9">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_9">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_9"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_10"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_10">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_10">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_10"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_11"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_11">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_11">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_11"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_12"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_12">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_12">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_12"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_13"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_13">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_13">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_13"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_14"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_14">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_14">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_14"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_15"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_15">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_15">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_15"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_16"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_16">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_16">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_16"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_17"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_17">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_17">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_17"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_18"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_18">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_18">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_18"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_19"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_19">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_19">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_19"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_20"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_20">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_20">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_20"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_21"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_21">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_21">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_21"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_22"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_22">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_22">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_22"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_23"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_23"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_23"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_23"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_24"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_24"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_24"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_24"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_25"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_25"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_25"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_25"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_26"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_26"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_26"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_26"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_27"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_27"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_27"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_27"> executed.; in: LAMBDA (#:INSTANS3653)
;     (LAMBDA (#:INSTANS3653))
; 
; caught STYLE-WARNING:
;   The variable #:INSTANS3653 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_28"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_28"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_28"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_28"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_29"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_29"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_29"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_29"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_30"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_30"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_30"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_30"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_31"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_31"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_31"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_31"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_32"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_32"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_32"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_32"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_33"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_33"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_33"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_33"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_34"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_34"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_34"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_34"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_35"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_35"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_35"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_35"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_36"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_36"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_36"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_36"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_37"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_37">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_37">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_37"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_38"> executed -> rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_38">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_38">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_38"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_39"> executed -> rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_39">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_39">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_39"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_40"> executed -> rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_40">: Already failed, skipping.
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_40">: Already failed, skipping.
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_40"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_41"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_41"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_41"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_41"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_42"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_42"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_42"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_42"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_43"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_43"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_43"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_43"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_44"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_44"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_44"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_44"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_45"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_45"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_45"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_45"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_46"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_46"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_46"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_46"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_47"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_47"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_47"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_47"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_48"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_48"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_48"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_48"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_49"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_49"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_49"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_49"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_50"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_50"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_50"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_50"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_51"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_51"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_51"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_51"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_52"> executed -> rule-parsing-failed, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_52"> executed -> rule-parsing-failed, created parsed
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_52"> executed -> rule-parsing-failed, created parsed
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_52"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_53"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_53"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_53"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-1/test_53"> executed.
Phase PARSED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_54"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_54">: Already failed, skipping.
Phase COMPARED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_54">: Already failed, skipping.
Phase COMPLETED for #<sparql-negative-update-syntax-test-11 "data-sparql11/syntax-update-1/test_54"> executed.
Phase PARSED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-2/syntax-update-other-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-2/syntax-update-other-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPARED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-2/syntax-update-other-01"> executed -> rule-initialization-succeeded rule-translation-succeeded rule-parsing-succeeded, created parsed
Phase COMPLETED for #<sparql-positive-update-syntax-test-11 "data-sparql11/syntax-update-2/syntax-update-other-01"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/load-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/load-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/load-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/load-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/load-into-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/load-into-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/load-into-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/load-into-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/clear-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/clear-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/clear-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/clear-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/clear-default-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/clear-default-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/clear-default-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/clear-default-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/create-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/create-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/create-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/create-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/drop-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/drop-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/drop-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/drop-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/drop-default-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/drop-default-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/drop-default-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/drop-default-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/copy-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/copy-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/copy-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/copy-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/copy-to-default-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/copy-to-default-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/copy-to-default-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/copy-to-default-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/move-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/move-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/move-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/move-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/move-to-default-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/move-to-default-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/move-to-default-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/move-to-default-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/add-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/add-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/add-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/add-silent"> executed.
Phase PARSED for #<sparql-update-evaluation-test "data-sparql11/update-silent/add-to-default-silent"> executed -> rule-translation-failed feature-not-implemented-yet rule-parsing-succeeded, created parsed
Phase RAN for #<sparql-update-evaluation-test "data-sparql11/update-silent/add-to-default-silent">: Already failed, skipping.
Phase COMPARED for #<sparql-update-evaluation-test "data-sparql11/update-silent/add-to-default-silent">: Already failed, skipping.
Phase COMPLETED for #<sparql-update-evaluation-test "data-sparql11/update-silent/add-to-default-silent"> executed.